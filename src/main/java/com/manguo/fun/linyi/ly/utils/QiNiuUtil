
import com.google.gson.Gson;
import com.qiniu.common.QiniuException;
import com.qiniu.http.Response;
import com.qiniu.sms.SmsManager;
import com.qiniu.storage.Configuration;
import com.qiniu.storage.Region;
import com.qiniu.storage.UploadManager;
import com.qiniu.storage.model.DefaultPutRet;
import com.qiniu.util.Auth;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

/**
 * Create with IDEA
 *
 * @author linyi
 * @date 2020-04-26
 **/
public class QiNiu {
    static String ACCESS_KEY = "你的key";
    static String SECRET_KEY = "你的secret";

    /**
     * 发送验证码
     *
     * @param code
     * @param phone
     * @return
     */
    public static boolean sendCode(String code,String phone){
        try {
            Auth auth = Auth.create(ACCESS_KEY, SECRET_KEY);
            // 实例化一个SmsManager对象
            SmsManager smsManager = new SmsManager(auth);
            Map<String, String> map = new HashMap<>();
            map.put("code",code);
            Response resp = null;
            resp = smsManager.sendMessage("1254350155994370048", new String[] { phone }, map);
            System.out.println(resp.bodyString());
            return true;
        } catch (QiniuException e) {
            e.printStackTrace();
            return false;
        }
    }

    /**
     * 文件上传七牛云
     *
     * @param file
     * @return
     */
    public static String pushImage(MultipartFile file){
        try {
            Configuration cfg = new Configuration(Region.region0());
            UploadManager uploadManager = new UploadManager(cfg);
            //...空间名
            String bucket = "linyi";
            String key = "这里是文件名";
            byte[] uploadBytes = file.getBytes();
            Auth auth = Auth.create(ACCESS_KEY, SECRET_KEY);
            String upToken = auth.uploadToken(bucket);
            Response response = uploadManager.put(uploadBytes, key, upToken);
            //解析上传成功的结果
            DefaultPutRet putRet = new Gson().fromJson(response.bodyString(), DefaultPutRet.class);
            System.out.println(putRet.key);
            System.out.println(putRet.hash);
        } catch (QiniuException ex) {
            Response r = ex.response;
            System.err.println(r.toString());
            try {
                System.err.println(r.bodyString());
            } catch (QiniuException ex2) {
                //ignore
            }
        }catch (IOException ex){
            ex.printStackTrace();
        }
        return "23";
    }
}
